@use "sass:math";
//Import other mixin files here
@import 'fonts';
@import 'variables';

@mixin font-details($weight, $style:normal, $decoration:none) {

	//Weight
	@if ($weight=='light') {
		font-weight: 300;
	} @else if ($weight == 'semi-bold') {
		font-weight: 600;
	} @else if ($weight=='bold') {
		font-weight: 700;
	} @else if ($weight=='heavy') {
		font-weight: 900;
	} @else {
		font-weight: 400;
	}
	//Style
	@if ($style=='italic') {
		font-style: italic;
	} @else {
		font-style: normal;
	}

	//Decoration
	@if ($decoration == 'underline') {
		text-decoration: underline;
	} @else {
		text-decoration: none;
	}
}

@mixin limit-width {
	width: 100%;
	max-width: 1400px;
	margin: 0 auto;
}

@mixin limit-medium {
	width: 100%;
	max-width: 1240px;
	margin: 0 auto;
}

@mixin limit-hero {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
}

@mixin limit-narrow {
	width: 100%;
	max-width: 820px;
	margin: 0 auto;
	padding: 0 20px;
}

@mixin cover-bg {
	background-repeat: no-repeat;
	background-position: 50% 50%;
	background-size: cover;
}

@mixin contain-bg {
	background-repeat: no-repeat;
	background-position: 50% 50%;
	background-size: contain;
}

@mixin reset-list {
	margin: 0;
	padding: 0;
	list-style: none;
}

@mixin z-absolute {
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	position: absolute;
}
//Updated both ease mixins to be the same speed to keep consistent transitions
@mixin basic-ease {
	transition: all .2s ease-in-out;
	-webkit-transition: all .2s ease-in-out;
	-moz-transition: all .2s ease-in-out;
}

@mixin fast-ease {
	transition: all .1s ease-in-out;
	-webkit-transition: all .1s ease-in-out;
	-moz-transition: all .1s ease-in-out;
}

@mixin gradient($start, $stop, $angle) {
	background: linear-gradient($angle, $start, $stop);
}

@mixin red-list {
	ul:not(aside ul) {
		list-style: none;
		li {
			position: relative;
			&:before {
				content: "â€¢";
				position: absolute;
				left: -20px;
				color: #ef3340;
				font-size: 24px;
				line-height: 30px;
			}
		}
	}
}

@mixin menu-icon(
	$color: $black,
$color-hover: $dark-gray,
$width: 20px,
$height: 16px,
$weight: 2px,
$radius: 0,
$bars: 3
) {
	// box-shadow CSS output
	$shadow: ();
	$hover-shadow: ();

	// Spacing between bars is calculated based on the total height
	// of the icon and the weight of each bar
	$spacing: math.div(($height - ($weight * $bars)), ($bars - 1));

	@if unit($spacing) == 'px' {
		$spacing: floor($spacing);
	}

	// Icon container
	position: relative;
	display: inline-block;
	vertical-align: middle;
	width: $width;
	height: $height;
	cursor: pointer;

	span {
		top: 0;
		display: block;

		&::before, &::after {
			content: "";
			display: block;
		}

		&, &::before, &::after {
			position: absolute;
			left: 0;
			width: 100%;
			height: $weight;
			background-color: $color;
			border-radius: $radius;
			-webkit-transition-property: -webkit-transform, opacity;
			transition-property: transform, opacity;
			transition-duration: 0.15s;
			transition-timing-function: ease;
		}

		&::before {
			top: $spacing + $weight;
		}

		&::after {
			top: ($spacing + $weight) * 2;
		}

		&:hover {
			&, &::before, &::after {
				background-color: $color-hover;
			}
		}
	}

	&.is-active {
		span {
			$y-offset: $spacing + $weight;

			transform: translate3d(0, $y-offset, 0) rotate(45deg);

			&::before {
				transform: rotate(-45deg) translate3d(math.div($width, -7), $spacing * -1, 0);
				display: none;
				//opacity: 0;
			}

			&::after {
				transform: translate3d(0, $y-offset * -2, 0) rotate(-90deg);
			}
		}
	}
}

@mixin list-unstyled {
	margin: 0;
	padding: 0;
	list-style: none;
}

@mixin bgcover {
	background-repeat: no-repeat;
	background-position: center center;
	background-size: cover;
}

@mixin menu-icon(
	$color: $black,
$color-hover: $dark-gray,
$width: 20px,
$height: 16px,
$weight: 2px,
$radius: 0,
$bars: 3
) {
	// box-shadow CSS output
	$shadow: ();
	$hover-shadow: ();

	// Spacing between bars is calculated based on the total height
	// of the icon and the weight of each bar
	$spacing: math.div(($height - ($weight * $bars)), ($bars - 1));

	@if unit($spacing) == 'px' {
		$spacing: floor($spacing);
	}

	// Icon container
	position: relative;
	display: inline-block;
	vertical-align: middle;
	width: $width;
	height: $height;
	cursor: pointer;

	span {
		top: 0;
		display: block;

		&::before, &::after {
			content: "";
			display: block;
		}

		&, &::before, &::after {
			position: absolute;
			left: 0;
			width: 100%;
			height: $weight;
			background-color: $color;
			border-radius: $radius;
			-webkit-transition-property: -webkit-transform, opacity;
			transition-property: transform, opacity;
			transition-duration: 0.15s;
			transition-timing-function: ease;
		}

		&::before {
			top: $spacing + $weight;
		}

		&::after {
			top: ($spacing + $weight) * 2;
		}

		&:hover {
			&, &::before, &::after {
				background-color: $color-hover;
			}
		}
	}

	&.is-active {
		span {
			$y-offset: $spacing + $weight;

			transform: translate3d(0, $y-offset, 0) rotate(45deg);

			&::before {
				transform: rotate(-45deg) translate3d(math.div($width, -7), $spacing * -1, 0);
				display: none;
				//opacity: 0;
			}

			&::after {
				transform: translate3d(0, $y-offset * -2, 0) rotate(-90deg);
			}
		}
	}
}

@mixin position-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin brand-button {
	padding: 20px 30px;
	font-size: 16px;
	font-weight: 500;
	line-height: 1;
	text-decoration: none;
	border: 2px solid $black;
	border-radius: 5px;
	background-color: transparent;
	color: $black;
	transition: background-color 0.2s ease-out,
	color 0.2s ease-out;
	@include breakpoint(medium) {
		font-size: 20px;
		padding: 20px 60px;
		}
	&:hover,
	&:active,
	&:focus {
		background-color: $black;
		color: $white;
		transition: background-color 0.2s ease-out,
			color 0.2s ease-out;
	}
}